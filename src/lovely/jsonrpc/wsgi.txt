=============
WSGI JSON-RPC
=============

An wsgi-application that dispatches registered apis to a specific
entrypoint.

    >>> from lovely.jsonrpc import wsgi

The wsgi app takes a dictionary of entrypoints along with dispatchers
as constructor arugments. So first we need to create a dispatcher.

    >>> from lovely.jsonrpc import dispatcher
    >>> demo1 = dispatcher.JSONRPCDispatcher()
    >>> demo2 = dispatcher.JSONRPCDispatcher()

Now we create the app.

    >>> app = wsgi.WSGIJSONRPCApplication(
    ...     {'demo1':demo1,
    ...      'demo2':demo2}
    ...     )

Let us register a simple method on demo1.

    >>> def echo(s):
    ...     return s

    >>> demo1.register_method(echo, 'echo')

We start a simple server.

    >>> from wsgiref.simple_server import make_server
    >>> server = make_server('localhost', 12345, app)

Let the server handle one request.

    >>> import threading
    >>> class OneRequest(threading.Thread):
    ...     def run(self):
    ...         server.handle_request()


Let us set up a client.

    >>> from lovely.jsonrpc import proxy

    >>> client1 = proxy.ServerProxy('http://localhost:12345/demo1')
    >>> client2 = proxy.ServerProxy('http://localhost:12345/demo2')

    >>> OneRequest().start()
    >>> client1.echo(1)
    1

If the method is not found a 500 is raised.

    >>> OneRequest().start()
    >>> client2.echo(1)
    Traceback (most recent call last):
    ...
    RemoteException: {'message': 'no such method', 'type': 'JSONRPCError'}


Let us register another method that fails.

    >>> def zero_division():
    ...     return 1/0

    >>> demo1.register_method(zero_division, 'zero_division')

    >>> OneRequest().start()

We get a RemoteException now.

    >>> client1.zero_division()
    Traceback (most recent call last):
    ...
    RemoteException: {'message': 'Server Exception ::
    integer division or modulo by zero',
    'type': "<type 'exceptions.ZeroDivisionError'>"}

If the entrypoint is not found a 404 is raised.

    >>> client3 = proxy.ServerProxy('http://localhost:12345/notthere')
    >>> OneRequest().start()
    >>> client3.echo(1)
    Traceback (most recent call last):
    ...
    HTTPException: 404
    '404 Not found'

